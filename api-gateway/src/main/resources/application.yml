server:
  port: 8082
  netty:
    connection-timeout: 3000

spring:
  application:
    name: api-gateway
  security:
    oauth2:
      client:
        registration:
          keycloak:
            enable-cors: true
            client-id: api-gateway
            client-secret: 05ee45a9-5ef0-427c-9a5a-f4814526b81b
            scope: openid
        provider:
          keycloak:
            enable-cors: true
            issuer-uri: ${KEYCLOAK_URL:http://localhost:8080}/auth/realms/GameManager
  session:
    store-type: redis
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
  cloud:
    gateway:
      default-filters:
        - TokenRelay
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1
      routes:
        - id: app-provider-service
          uri: lb://APP-PROVIDER-SERVICE
          predicates:
            - Path=/app/**
        - id: data-provider-service
          uri: lb://DATA-PROVIDER-SERVICE
          predicates:
            - Path=/data/**
        - id: forum-service
          uri: lb://FORUM-SERVICE
          predicates:
            - Path=/posts/**
        - id: scoreboard-service
          uri: lb://SCOREBOARD-SERVICE
          predicates:
            - Path=/scoreboard/**
#          filters:
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 2
#                redis-rate-limiter.burstCapacity: 2
#                redis-rate-limiter.requestedTokens: 1

management:
  health:
    redis:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    jmx:
      exposure:
        include: "*"
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}


eureka:
  instance:
    appname: ${spring.application.name}
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:9000}/eureka
